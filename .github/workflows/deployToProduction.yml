name: Test application, Build Docker Image and Deploy to production

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-test:
    name: build and test django app
    runs-on: ubuntu-latest
    # for postgres db
    # services:
    #   postgres:
    #     image: postgres:12
    #     env:
    #       POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #       POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #       POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    #     ports:
    #       - 5432:5432
    #     # needed because the postgres container does not provide a healthcheck
    #     options: 
    #       --health-cmd pg_isready 
    #       --health-interval 10s 
    #       --health-timeout 5s 
    #       --health-retries 5
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # - name: Management commands
      #   run: |
      #     python manage.py migrate
      # - name: Run tests
      #   run: |
      #     python manage.py tests

      # for postgres database
      # - name: Management commands
      #   run: |
      #     export DATABASE_URL='postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}'
      #     python manage.py migrate
      # - name: Run tests
      #   run: |
      #     export DATABASE_URL='postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}'
      #     python manage.py test

  docker-build:
    needs: build-test
    name: Deploy to docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/premuimreal

  deploy-to-server:
    needs: docker-build
    name: Deploy to server
    runs-on: ubuntu-latest
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRC_HOST_NAME }}
          username: ${{ secrets.PRC_HOST_USERNAME }}
          key: ${{ secrets.PRC_HOST_KEY }}
          script: |
            /root/cdal-main/deploy_code_changes.py